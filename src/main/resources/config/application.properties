server.port=8081
#项目路径可配可不配，配了访问前面得加上这个路径,ContextPath must start with '/' and not end with '/'
server.servlet.context-path=/test
#---------------------------------数据库配置----------------------------------------
#数据库账号密码
spring.datasource.username=root
spring.datasource.password=123456
#数据库jdbc连接url地址
spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8&characterEncoding=utf-8
#指定数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库源类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#--------------------------------druid数据源其他配置------------------------------------------
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.useGlobalDataSourceStat=true
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true

#--------------------------------日志配置-----------这些信息都会映射到logback.xml日志配置使用
#日志生成地址
log.path=D:/logs/demo/
#日志输出字符编码(GBK/UTF-8)
log.console.encode=UTF-8
#日志输出等级(DEBUG/INFO/WARN/ERROR)包括控制台和文件,生产环境使用INFO
log.console.print.level=DEBUG

#================================Redis配置（现在还未使用测试）========================================
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=47.105.75.68
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=tdy
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#================================kafka基本配置========================================
spring.kafka.bootstrap-servers=localhost:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=user-log-group
#================================kafka消费者配置======================================
#kafka.consumer.servers=IP:9092,IP:9092(kafka消费集群ip+port端口)
#kafka.consumer.enable.auto.commit=true(是否自动提交offset)
#spring.kafka.listener.ack-mode=manual_immediate（在前者为false时，当监听器调用Acknowledgment.acknowledge()方法后立即提交）
#kafka.consumer.session.timeout=20000(连接超时时间)
#kafka.consumer.auto.commit.interval=100
#kafka.consumer.auto.offset.reset=latest(实时生产，实时消费，不会从头开始消费)
#kafka.consumer.topic=result(消费的topic)
#kafka.consumer.group.id=test(消费组)
#kafka.consumer.concurrency=10(设置消费线程数)
#==================================minio配置==============================================
minio.endpoint=http://47.105.75.68:9000
minio.accesskey=minioadmin
minio.secretKey=minioadmin
minio.bucket=cdr
#---------------------------------其它配置----------------------------------------------
#关闭Mybatis-plus数据库字段的驼峰命名映射,默认下Mybatis-plus会将数据库字段从驼峰命名转为下划线形式
mybatis-plus.configuration.map-underscore-to-camel-case=false
#--------------------mapper映射---------------------------------------------------
#这个mapper映射设置，不设置路径必须一致
mybatis-plus.mapper-locations=classpath*:mybatis/*.xml